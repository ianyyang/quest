{"version":3,"sources":["features/TitleHeader/TitleHeader.tsx","common/SearchBar/SearchBar.tsx","features/MainSearchBar/MainSearchBar.tsx","common/Bookmark/Bookmark.tsx","features/BookmarksSection/BookmarksSection.tsx","features/OptionsMenu/OptionsMenu.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TitleHeader","className","SearchBar","onSubmitHandler","useState","searchInput","setSearchInput","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","MainSearchBar","searchQuery","length","Object","assign","document","createElement","href","click","Bookmark","fontSize","BookmarksSection","OptionsMenu","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uUAUeA,EARK,WAClB,OACE,qBAAKC,UAAU,eAAf,oB,wBC+BWC,G,MA7BG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,gBAClB,EAAsCC,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OACE,qBAAKL,UAAU,uBAAf,SACE,uBACEA,UAAU,kBACVM,SAAU,SAACC,GACTL,EAAgBE,GAChBG,EAAMC,kBAJV,UAOE,cAAC,IAAD,CAAYR,UAAU,oBACtB,uBACEA,UAAU,mBACVS,KAAK,OACLC,YAtBiB,iBAuBjBC,MAAOP,EACPQ,SAnBgB,SAACL,GACvBF,EAAeE,EAAMM,OAAOF,iBCYjBG,G,MAnBO,WAYpB,OACE,qBAAKd,UAAU,4BAAf,SACE,cAAC,EAAD,CAAWE,gBAXG,SAACa,GACY,IAAxBA,EAAaC,QAChBC,OAAOC,OAAOC,SAASC,cAAc,KAAM,CACzCP,OAAQ,SACRQ,KAAK,GAAD,OANc,oCAMd,OAAuBN,KAC1BO,e,iBCAMC,G,MARE,WACb,OACE,qBAAKvB,UAAU,qBAAf,SACE,cAAC,IAAD,CAAYwB,SAAU,c,iBCUfC,G,MAZU,WACvB,OACE,sBAAKzB,UAAU,8BAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CAASA,UAAU,oCCIV0B,G,MAbK,WAClB,OACE,0BAAS1B,UAAU,yBAAnB,UACE,yBAASA,UAAU,sBAAnB,qBAGA,qBAAKA,UAAU,oBAAf,iGCSS2B,G,MAXH,WACV,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCES4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.213e7a2a.chunk.js","sourcesContent":["import './TitleHeader.css'\n\nconst TitleHeader = () => {\n  return (\n    <div className=\"title-header\">\n      QUEST\n    </div>\n  )\n}\n\nexport default TitleHeader\n","import { useState } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport './SearchBar.css'\n\nexport const placeHolder = \"SEARCH HERE...\"\n\nconst SearchBar = ({onSubmitHandler}: any) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\")\n\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(event.target.value)\n  }\n\n  return (\n    <div className=\"search-bar-container\">\n      <form\n        className=\"search-bar-form\"\n        onSubmit={(event) => {\n          onSubmitHandler(searchInput)\n          event.preventDefault()\n        }}\n      >\n        <SearchIcon className=\"search-bar-icon\"/>\n        <input\n          className=\"search-bar-input\"\n          type=\"text\"\n          placeholder={placeHolder}\n          value={searchInput}\n          onChange={onChangeHandler}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import SearchBar from 'common/SearchBar/SearchBar'\nimport './MainSearchBar.css'\n\nconst MainSearchBar = () => {\n  const googleSearchUrl = 'https://www.google.com/search?q='\n\n  const getSearch = (searchQuery: string) => {\n    if ((searchQuery).length !== 0) {\n      Object.assign(document.createElement('a'), {\n        target: '_blank',\n        href: `${googleSearchUrl}${searchQuery}`,\n      }).click()\n    }\n  }\n\n  return (\n    <div className=\"main-search-bar-container\">\n      <SearchBar onSubmitHandler={getSearch}/>\n    </div>\n  )\n}\n\nexport default MainSearchBar\n","import RedditIcon from '@material-ui/icons/Reddit'\nimport './Bookmark.css'\n\nconst Bookmark = () => {\n    return (\n      <div className=\"bookmark-container\">\n        <RedditIcon fontSize={'large'}/>\n      </div>\n    )\n  }\n  \nexport default Bookmark\n  ","import Bookmark from 'common/Bookmark/Bookmark'\nimport AddIcon from '@material-ui/icons/Add';\nimport './BookmarksSection.css'\n\nconst BookmarksSection = () => {\n  return (\n    <div className=\"bookmarks-section-container\">\n      <Bookmark/>\n      <Bookmark/>\n      <Bookmark/>\n      <Bookmark/>\n      <AddIcon className=\"bookmarks-section-add-icon\"/>\n    </div>\n  )\n}\n\nexport default BookmarksSection\n","import './OptionsMenu.css'\n\nconst OptionsMenu = () => {\n  return (\n    <details className=\"options-menu-container\">\n      <summary className=\"options-menu-header\">\n        OPTIONS\n      </summary>\n      <div className=\"options-menu-menu\">\n        TODO: Options menu components (need to do research to determine functionality)\n      </div>\n    </details>\n  )\n}\n\nexport default OptionsMenu\n","import TitleHeader from 'features/TitleHeader/TitleHeader'\nimport MainSearchBar from 'features/MainSearchBar/MainSearchBar'\nimport Bookmarks from 'features/BookmarksSection/BookmarksSection'\nimport OptionsMenu from 'features/OptionsMenu/OptionsMenu'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TitleHeader/>\n      <MainSearchBar/>\n      <Bookmarks/>\n      <OptionsMenu/>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}